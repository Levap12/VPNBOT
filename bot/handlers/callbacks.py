from aiogram import F, Router
from aiogram.filters import CommandStart,Command
from aiogram.types import Message, CallbackQuery
from bot.keyboards import user_keyboards
from bot.handlers.user_handlers import cmd_start
import os
from datetime import datetime, timedelta
from bot.utils import marzhapi
import asyncio
callback_router = Router()
from bot.utils.base64coding import encode
from dotenv import load_dotenv

load_dotenv('../.env')
SUB_URL = os.getenv("SUB_URL")

# @callback_router.callback_query(F.data == 'first_connect')
# async def first_connect(callback: CallbackQuery):
#     link = await marzhapi.crate_trial(callback.from_user.id)
#     text = 'ü™ê –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Vless:' \
#            '\n' \
#            f'\n<code>{link}</code>' \
#            '\nüëÜ –ù–∞–∂–º–∏—Ç–µ —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å!'
#
#     await callback.message.edit_text(text=text, reply_markup=user_keyboards.get_firstmsg_kb(), parse_mode='HTML')

user_last_interaction = {}
async def handle_message_edit(callback: CallbackQuery, new_text: str, new_reply_markup):
    user_id = callback.from_user.id
    current_time = asyncio.get_event_loop().time()

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ –ø—Ä–æ—à–ª–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—Ä–µ–º–µ–Ω–∏ —Å –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è
    if user_id in user_last_interaction:
        last_time = user_last_interaction[user_id]
        if current_time - last_time < .5:  # –ù–∞–ø—Ä–∏–º–µ—Ä, 1 —Å–µ–∫—É–Ω–¥–∞
            await callback.answer("–ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –Ω–∞–∂–∞—Ç–∏–µ–º.")
            return

    user_last_interaction[user_id] = current_time

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ –µ–≥–æ —Ä–∞–∑–º–µ—Ç–∫–∞
    if callback.message.text != new_text or callback.message.reply_markup != new_reply_markup:
        await callback.message.edit_text(text=new_text, reply_markup=new_reply_markup, parse_mode='HTML', disable_web_page_preview=True)
    else:
        await callback.answer("–°–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –∏–∑–º–µ–Ω–µ–Ω–æ.")


@callback_router.callback_query(F.data == 'profile')
async def profile_cb(callback: CallbackQuery):
    user_info = await marzhapi.get_user_info(callback.from_user.id)

    if user_info["subscription_status"] == 'active':
        sub_status = "‚úÖ –ê–∫—Ç–∏–≤–Ω–∞"
    elif user_info["subscription_status"] == 'disabled':
        sub_status = "‚ùå –ù–µ –∞–∫—Ç–∏–≤–Ω–∞"

    else:
        sub_status = "‚ùì –ù–µ–∏–∑–≤–µ—Ç—Å–Ω–∞ –æ—à–∏–±–∫–∞"

    text = f'<b>–ü–æ–¥–ø–∏—Å–∫–∞: {sub_status}</b>\n' \
           f'‚îú ID: {callback.from_user.id}\n' \
           f'‚îú –û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π: {user_info["remaining_days"]}\n' \
           f'‚îî –ê–∫—Ç–∏–≤–Ω–∞ –¥–æ: {user_info["expire_date"]}'#‚îú‚îî

    await handle_message_edit(callback, text, user_keyboards.get_profile_kb())


@callback_router.callback_query(F.data == 'back_to_menu')
async def back_to_main_cb(callback: CallbackQuery):
    main_menu = 'Nock VPN ‚Äî –±–µ–∑–æ–ø–∞—Å–Ω–∞—è –∑–∞—â–∏—Ç–∞ –¥–ª—è –≤–∞—à–µ–π –æ–Ω–ª–∞–π–Ω-–∂–∏–∑–Ω–∏.\n' \
                '\n' \
                'üî• –ü—Ä–∏–æ–±—Ä–µ—Ç–∞–π—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É Nock VPN –æ—Ç 200‚ÇΩ\n' \
                '\n' \
                '‚ö°Ô∏è –ü–æ–¥–∫–ª—é—á–∞–π—Ç–µ—Å—å –∫ VPN, –∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ü–æ–¥–∫–ª—é—á–∏—Ç—Å—è¬ª\n' \
                '\n' \
                '–í—ã –º–æ–∂–µ—Ç–µ —É–ø—Ä–∞–≤–ª—è—Ç—å –±–æ—Ç–æ–º —Å–ª–µ–¥—É—é—â–∏–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏:'

    await handle_message_edit(callback, main_menu, user_keyboards.get_main_kb())


@callback_router.callback_query(F.data == 'buyvpn')
async def buyvpn_cb(callback: CallbackQuery):
    text = '–î–ª—è –ø–æ–ª–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –≤—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω—ã–π –¥–ª—è –≤–∞—Å —Ç–∞—Ä–∏—Ñ:' \
           '\n\n190‚ÇΩ / 1 –º–µ—Å' \
           '\n500‚ÇΩ / 3 –º–µ—Å' \
           '\n900‚ÇΩ / 6 –º–µ—Å' \
           '\n\nüí≥ –ö –æ–ø–ª–∞—Ç–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è –∫–∞—Ä—Ç—ã –†–§:' \
           '\nVisa, MasterCard, –ú–ò–† –∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã.'


    await handle_message_edit(callback, text, user_keyboards.get_buyvpn_kb())


async def handle_subscription(callback: CallbackQuery, months: int):
    if months == 1:
        month_text = "–º–µ—Å—è—Ü"
    elif 2 <= months <= 4:
        month_text = "–º–µ—Å—è—Ü–∞"
    else:
        month_text = "–º–µ—Å—è—Ü–µ–≤"

    payment_url = f'https://payment.example.com/{months}_months'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É
    crypto_payment_url = f'https://crypto-payment.example.com/{months}_months'  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É

    text = f'–î–æ—Å—Ç—É–ø –Ω–∞ {months} {month_text}'
    await handle_message_edit(callback, text, user_keyboards.get_payment_kb(months, payment_url, crypto_payment_url))


@callback_router.callback_query(F.data.startswith('test_payment_'))
async def test_payment_cb(callback: CallbackQuery):
    months = int(callback.data.split('_')[-1])
    if months == 1:
        month_text = "–º–µ—Å—è—Ü"
    elif months == 3:
        month_text = "–º–µ—Å—è—Ü–∞"
    elif months == 6:
        month_text = "–º–µ—Å—è—Ü–µ–≤"
    else:
        month_text = "–º–µ—Å—è—Ü–µ–≤"

    await marzhapi.extend_expire(callback.from_user.id,months)

    text = f'–û–ø–ª–∞—Ç–∞ –∑–∞ {months} {month_text} —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞! –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É.'
    await handle_message_edit(callback, text, user_keyboards.get_mainmenu_kb())


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ –ø–æ–¥–ø–∏—Å–∫–∏
@callback_router.callback_query(F.data == 'buyvpn_1')
async def buyvpn_1_cb(callback: CallbackQuery):
    await handle_subscription(callback, 1)

@callback_router.callback_query(F.data == 'buyvpn_3')
async def buyvpn_3_cb(callback: CallbackQuery):
    await handle_subscription(callback, 3)

@callback_router.callback_query(F.data == 'buyvpn_6')
async def buyvpn_6_cb(callback: CallbackQuery):
    await handle_subscription(callback, 6)


@callback_router.callback_query(F.data == 'connect')
async def trial_shadowsocks_cb(callback: CallbackQuery):
    text = '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è üëá\n' \
           '–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º Vless'
    await handle_message_edit(callback, text, user_keyboards.get_connect_kb())


@callback_router.callback_query(F.data == 'vless')
async def trial_vless_cb(callback: CallbackQuery):
    text = 'ü™ê –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ VPN:' \
           '\n' \
           f'\n<code>{SUB_URL}/{encode(callback.from_user.id)}</code>' \
           '\nüëÜ –ù–∞–∂–º–∏—Ç–µ (—Ç–∞–ø–Ω–∏—Ç–µ) —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ' \
           '\n' \
           '\n–ï—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ - –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å <b>–±—ã—Å—Ç—Ä—ã–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º</b>' \
           '\n- <a href="https://apps.apple.com/us/app/streisand/id6450534064">Streisand</a> - –¥–ª—è iOS üçè' \
           '\n- <a href="https://play.google.com/store/apps/details?id=com.v2ray.ang">v2rayNG</a> - –¥–ª—è Android ü§ñ' \
           '\n' \
           '\n<a href="">iOS</a>' \
           '\n<a href="">Android</a>' \
           '\n' \
           '\n‚≠êÔ∏è –ï—Å–ª–∏ —É –≤–∞—Å Android(v2rayNG) - –Ω–∞–∂–º–∏—Ç–µ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ "..." - –û–±–Ω–æ–≤–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É' \
           '\n' \
           '\n–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é üëá'
    await handle_message_edit(callback, text, user_keyboards.get_vless_con_kb())



# /sub/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMTExMSIsImFjY2VzcyI6InN1YnNjcmlwdGlvbiIsImlhdCI6MTcxNjQwOTE0Nn0.0JnskQ2WHt_JEj6v5xUzD85-vjcHzi1eF92IyS4URug
# /sub/eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMTExMSIsImFjY2VzcyI6InN1YnNjcmlwdGlvbiIsImlhdCI6MTcxNjQxMDA5OX0.7MjY1IDfK1T97zSUrWH-e42ySV3mreD_lSL4qYnkJNc


# @callback_router.callback_query(F.data.startswith('outline'))
# async def trial_shadowsocks_cb(callback: CallbackQuery):
#     text = 'ü™ê –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Outline VPN:' \
#            '\n\n<code>ssconf://users.outline.artydev.ru/conf/959fc2d1ec5e0x1af70d27#nRomania</code>' \
#             '\nüëÜ –ù–∞–∂–º–∏—Ç–µ —á—Ç–æ–±—ã —Å–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å!' \
#            '\n\n–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å üëâ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é (https://telegra.ph/Podklyuchenie-k-Outline-VPN-08-11)'
#
#     await callback.message.edit_text(text=text, reply_markup=user_keyboards.get_connected_kb(), parse_mode='HTML',disable_web_page_preview=True)




# @callback_router.callback_query(F.data.startswith('trial_shadowsocks_'))
# async def trial_shadowsocks_cb(callback: CallbackQuery):
#     country_id = callback.data.split('_')[-1]
#     print(f'{country_id}')
#     if country_id == "nl":
#         panel = Marzban(os.getenv("MARZH_LOGIN"), os.getenv("MARZH_PWD"), "https://vm13139.vpsone.xyz")
#         token = await panel.get_token()
#         expire_time = datetime.utcnow() + timedelta(days=1)  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –∏—Å—Ç–µ—á–µ–Ω–∏—è —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è –Ω–∞ 1 –¥–µ–Ω—å
#         expire_timestamp = int(expire_time.timestamp())
#         user = User(
#             username="new_user",  # –ó–∞–¥–∞–π—Ç–µ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
#             proxies={
#                 "shadowsocks": {}
#             },
#             inbounds={"shadowsocks": ["Shadowsocks TCP"]},  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –¥–ª—è Shadowsocks
#             expire=expire_timestamp,  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –∏—Å—Ç–µ—á–µ–Ω–∏—è —Å—Ä–æ–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è
#             data_limit=1024 * 1024 * 1024 * 15,  # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ª–∏–º–∏—Ç–∞ –¥–∞–Ω–Ω—ã—Ö, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ
#             data_limit_reset_strategy="no_reset",  # –°—Ç—Ä–∞—Ç–µ–≥–∏—è —Å–±—Ä–æ—Å–∞ –ª–∏–º–∏—Ç–∞ –¥–∞–Ω–Ω—ã—Ö
#             status="active"  # –°—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
#         )
#
#         result = await panel.add_user(user=user, token=token)
#
#         await callback.message.edit_text(text=result.links[0], reply_markup=await user_keyboards.get_trial_shadowsocks_countries_kb())

